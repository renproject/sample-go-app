# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

_defaults: &defaults
    docker:
      # specify the version
      - image: circleci/golang:1.9
    environment:
      - GOCACHE: "/tmp/go/cache"
      - DEP_VERSION: 0.5.0
    working_directory: /go/src/github.com/renproject/sample-go-app

commands:
  merge:
    description: "Merge from branch into another branch"
    parameters:
      from:
        description: The branch with changes to be merged into another branch
        type: string
      into:
        description: The branch onto which changes will be applied
        type: string
    steps:
      - run:
          name: Setup Git
          command: |
            git config --global url.ssh://git@github.com/renproject.insteadOf https://github.com/renproject
            git config --global user.name "CircleCI"
            git config --global user.email "circleci"
      - checkout
      - run:
          name: Merging branch
          command: |
            "git checkout << parameters.into >>"
            "git merge << parameters.from >> -v --commit --squash -m 'Merge branch << parameters.from >> into << parameters.into >>'"

jobs:
  build:
    <<: *defaults

    steps:
      - run:
          name: Setup Git
          command: git config --global url.ssh://git@github.com/renproject.insteadOf https://github.com/renproject
      - checkout
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/renproject/sample-go-app/vendor
      - run:
          name: Download dependencies
          command: |
            if [ ! -d /go/src/github.com/renproject/sample-go-app/vendor ]; then
                curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
                chmod +x /go/bin/dep
                /go/bin/dep ensure -v
            else
                echo "Dependencies were restored from cache."
            fi
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/renproject/sample-go-app/vendor
      - restore_cache:
          keys:
              - build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
          paths:
              - /tmp/go/cache
      - run:
          name: Building and testing
          command: |
            mkdir -p $GOCACHE
            cd cmd
            go build -v
            ./cmd
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_BUILD_NUM }}
          paths:
              - /tmp/go/cache
